/*
    __
    /L       
    - This module was generated by Chatgpt
    - Learned block generation and parameterized creatation of adder
*/

module cla_nbit #(
    parameter WIDTH = 16
)(
    input  [WIDTH-1:0] a,
    input  [WIDTH-1:0] b,
    input              cin,
    output [WIDTH-1:0] sum,
    output             cout
);

    localparam NUM_BLOCKS = WIDTH / 4;

    // Internal propagate and generate for each block
    wire [NUM_BLOCKS-1:0] p, g;
    wire [NUM_BLOCKS:0] c;

    assign c[0] = cin;

    genvar i;
    generate
        for (i = 0; i < NUM_BLOCKS; i = i + 1) begin : cla_blocks
            cla_4bit cla_inst (
                .a      (a[i*4 +: 4]),
                .b      (b[i*4 +: 4]),
                .cin    (c[i]),
                .sum    (sum[i*4 +: 4]),
                .p_pro  (p[i]),
                .g_pro  (g[i])
            );
        end
    endgenerate

    // Carry lookahead logic for blocks
    genvar j;
    generate
        for (j = 0; j < NUM_BLOCKS; j = j + 1) begin : carry_calc
            assign c[j+1] = g[j] | (p[j] & c[j]);
        end
    endgenerate

    assign cout = c[NUM_BLOCKS];

endmodule
/*
        - Tested output for normal 32 bit adder without the upgrade:- 
        
        A (hex),        B (hex),        Cin,    Sum (hex),      Cout
        00000000,       00000000,       0,      00000000,       0
        00000001,       00000001,       0,      00000002,       0
        0000000f,       00000001,       0,      00000010,       0
        0000000f,       0000000f,       0,      0000001e,       0
        0000000f,       0000000f,       1,      0000001f,       0
        0000000a,       00000005,       0,      0000000f,       0
        ffffffff,       00000001,       0,      00000000,       1
        ffffffff,       ffffffff,       1,      ffffffff,       1
        0f0f0f0f,       01010101,       0,      10101010,       0
        aaaaaaaa,       55555555,       0,      ffffffff,       0
        12345678,       87654321,       0,      99999999,       0
*/
